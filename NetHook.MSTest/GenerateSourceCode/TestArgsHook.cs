//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LocalHookProviders
{
    using System;
    using NetHook.Core;
    using System.Reflection;
    using System.Runtime.ConstrainedExecution;
    
    
    public sealed class LocalHookProvider_TestInstanceMethodArgs_0 : NetHook.Core.LocalHookRuntimeInstance
    {
        
        public LocalHookProvider_TestInstanceMethodArgs_0(NetHook.Core.LocalHookAdapter adapter) : 
                base(LocalHookAdapter.Current.Get("NetHook.MSTest.UnitTestLocalHook+TestInstance, NetHook.MSTest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null;TestInstanceMethodArgs"),  typeof(LocalHookProvider_TestInstanceMethodArgs_0).GetMethod("TestInstanceMethodArgs_Hook", BindingFlags.Static | BindingFlags.NonPublic))
        {
        }
        
        private static object TestInstanceMethodArgs_Hook(object thisObj, object arg_0, object arg_1, object arg_2, object arg_3, object arg_4, object arg_5, object arg_6, object arg_7, object arg_8, object arg_9)
        {
            object[] objectArray = new object[] { arg_0, arg_1, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7, arg_8, arg_9 };
            object value = IntPtr.Zero;
            Exception e = null;
            LocalHookAdapter.Current.BeginInvoke("NetHook.MSTest.UnitTestLocalHook+TestInstance, NetHook.MSTest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null;TestInstanceMethodArgs", thisObj, objectArray);
            try
            {
                if (objectArray.Length == 0) value = TestInstanceMethodArgs_Hook(thisObj, arg_0, arg_1, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7, arg_8, arg_9);
                else if (objectArray.Length == 1) value = TestInstanceMethodArgs_Hook(thisObj, arg_0, arg_1, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7, arg_8, arg_9);
                else if (objectArray.Length == 2) value = TestInstanceMethodArgs_Hook(thisObj, arg_0, arg_1, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7, arg_8, arg_9);
                else if (objectArray.Length == 3) value = TestInstanceMethodArgs_Hook(thisObj, arg_0, arg_1, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7, arg_8, arg_9);
                else value = TestInstanceMethodArgs_Hook(thisObj, arg_0, arg_1, arg_2, arg_3, arg_4, arg_5, arg_6, arg_7, arg_8, arg_9);
            }
            catch (System.Exception ex)
            {
                e = ex;
                throw;
            }
            finally
            {
                LocalHookAdapter.Current.AfterInvoke("NetHook.MSTest.UnitTestLocalHook+TestInstance, NetHook.MSTest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null;TestInstanceMethodArgs", thisObj, value, e);
            }
            return value;
        }
    }
}
