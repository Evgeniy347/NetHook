using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace NetHook.UI
{
    //------------------------------------------------------------------------------
    // <auto-generated>
    //     This code was generated by a tool.
    //     Runtime Version:4.0.30319.42000
    //
    //     Changes to this file may cause incorrect behavior and will be lost if
    //     the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------

    namespace LocalHookProviders
    {
        using NetHook.Core;
        using System;
        using System.Reflection;
        using System.Runtime.ConstrainedExecution;


        public sealed class LocalHookProvider_TrimBase64String_0 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_TrimBase64String_0(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.DataUtil, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;TrimBase64String"), typeof(LocalHookProvider_TrimBase64String_0).GetMethod("TrimBase64String_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object TrimBase64String_Hook(object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                object thisObj = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.DataUtil, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;TrimBase64String", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = TrimBase64String_Hook(arg_0);
                    else
                        value = TrimBase64String_Hook(arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.DataUtil, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;TrimBase64String", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_IndentBase64String_1 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_IndentBase64String_1(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.DataUtil, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;IndentBase64String"), typeof(LocalHookProvider_IndentBase64String_1).GetMethod("IndentBase64String_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object IndentBase64String_Hook(object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                object thisObj = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.DataUtil, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;IndentBase64String", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = IndentBase64String_Hook(arg_0);
                    else
                        value = IndentBase64String_Hook(arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.DataUtil, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;IndentBase64String", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_get_Description_2 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_Description_2(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Description"), typeof(LocalHookProvider_get_Description_2).GetMethod("get_Description_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_Description_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Description", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_Description_Hook(thisObj);
                    else
                        value = get_Description_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Description", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_Description_3 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_Description_3(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Description"), typeof(LocalHookProvider_set_Description_3).GetMethod("set_Description_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_Description_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Description", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_Description_Hook(thisObj, arg_0);
                    else
                        set_Description_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Description", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_ParentInfo_4 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_ParentInfo_4(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ParentInfo"), typeof(LocalHookProvider_get_ParentInfo_4).GetMethod("get_ParentInfo_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_ParentInfo_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ParentInfo", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_ParentInfo_Hook(thisObj);
                    else
                        value = get_ParentInfo_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ParentInfo", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_ParentInfo_5 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_ParentInfo_5(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_ParentInfo"), typeof(LocalHookProvider_set_ParentInfo_5).GetMethod("set_ParentInfo_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_ParentInfo_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_ParentInfo", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_ParentInfo_Hook(thisObj, arg_0);
                    else
                        set_ParentInfo_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_ParentInfo", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_ToString_6 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_ToString_6(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ToString"), typeof(LocalHookProvider_ToString_6).GetMethod("ToString_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object ToString_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ToString", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = ToString_Hook(thisObj);
                    else
                        value = ToString_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ToString", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_get_ChildInfos_7 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_ChildInfos_7(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ChildInfos"), typeof(LocalHookProvider_get_ChildInfos_7).GetMethod("get_ChildInfos_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_ChildInfos_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ChildInfos", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_ChildInfos_Hook(thisObj);
                    else
                        value = get_ChildInfos_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ChildInfos", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_AddChildInfo_8 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_AddChildInfo_8(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;AddChildInfo"), typeof(LocalHookProvider_AddChildInfo_8).GetMethod("AddChildInfo_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object AddChildInfo_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;AddChildInfo", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = AddChildInfo_Hook(thisObj, arg_0);
                    else
                        value = AddChildInfo_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;AddChildInfo", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_get_Errors_9 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_Errors_9(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Errors"), typeof(LocalHookProvider_get_Errors_9).GetMethod("get_Errors_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_Errors_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Errors", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_Errors_Hook(thisObj);
                    else
                        value = get_Errors_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Errors", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_AddError_10 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_AddError_10(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;AddError"), typeof(LocalHookProvider_AddError_10).GetMethod("AddError_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void AddError_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;AddError", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        AddError_Hook(thisObj, arg_0);
                    else
                        AddError_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;AddError", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_ResetHasErrors_11 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_ResetHasErrors_11(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ResetHasErrors"), typeof(LocalHookProvider_ResetHasErrors_11).GetMethod("ResetHasErrors_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void ResetHasErrors_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ResetHasErrors", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        ResetHasErrors_Hook(thisObj);
                    else
                        ResetHasErrors_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ResetHasErrors", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_SummaryErrorPanel_12 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_SummaryErrorPanel_12(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_SummaryErrorPanel"), typeof(LocalHookProvider_get_SummaryErrorPanel_12).GetMethod("get_SummaryErrorPanel_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_SummaryErrorPanel_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_SummaryErrorPanel", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_SummaryErrorPanel_Hook(thisObj);
                    else
                        value = get_SummaryErrorPanel_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_SummaryErrorPanel", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_AddPanelContent_13 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_AddPanelContent_13(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;AddPanelContent"), typeof(LocalHookProvider_AddPanelContent_13).GetMethod("AddPanelContent_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void AddPanelContent_Hook(object thisObj, object arg_0, object arg_1)
            {
                object[] objectArray = new object[] { arg_0, arg_1 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;AddPanelContent", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        AddPanelContent_Hook(thisObj, arg_0, arg_1);
                    else
                        AddPanelContent_Hook(thisObj, arg_0, arg_1);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;AddPanelContent", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_SummaryErrorHtml_14 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_SummaryErrorHtml_14(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_SummaryErrorHtml"), typeof(LocalHookProvider_get_SummaryErrorHtml_14).GetMethod("get_SummaryErrorHtml_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_SummaryErrorHtml_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_SummaryErrorHtml", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_SummaryErrorHtml_Hook(thisObj);
                    else
                        value = get_SummaryErrorHtml_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.ErrorInfo, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_SummaryErrorHtml", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_get_Type_15 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_Type_15(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Type"), typeof(LocalHookProvider_get_Type_15).GetMethod("get_Type_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_Type_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Type", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_Type_Hook(thisObj);
                    else
                        value = get_Type_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Type", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_Type_16 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_Type_16(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Type"), typeof(LocalHookProvider_set_Type_16).GetMethod("set_Type_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_Type_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Type", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_Type_Hook(thisObj, arg_0);
                    else
                        set_Type_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Type", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_Parse_17 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_Parse_17(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Parse"), typeof(LocalHookProvider_Parse_17).GetMethod("Parse_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object Parse_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Parse", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = Parse_Hook(thisObj, arg_0);
                    else
                        value = Parse_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Parse", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_get_Items_18 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_Items_18(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Items"), typeof(LocalHookProvider_get_Items_18).GetMethod("get_Items_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_Items_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Items", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_Items_Hook(thisObj);
                    else
                        value = get_Items_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Items", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_ParseEnum_19 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_ParseEnum_19(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ParseEnum"), typeof(LocalHookProvider_ParseEnum_19).GetMethod("ParseEnum_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object ParseEnum_Hook(object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                object thisObj = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ParseEnum", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = ParseEnum_Hook(arg_0);
                    else
                        value = ParseEnum_Hook(arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.EnumInfo`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ParseEnum", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_get_Type_20 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_Type_20(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.EnumList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Type"), typeof(LocalHookProvider_get_Type_20).GetMethod("get_Type_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_Type_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.EnumList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Type", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_Type_Hook(thisObj);
                    else
                        value = get_Type_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.EnumList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Type", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_Type_21 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_Type_21(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.EnumList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Type"), typeof(LocalHookProvider_set_Type_21).GetMethod("set_Type_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_Type_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.EnumList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Type", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_Type_Hook(thisObj, arg_0);
                    else
                        set_Type_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.EnumList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Type", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_Collection_22 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_Collection_22(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.EnumList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Collection"), typeof(LocalHookProvider_get_Collection_22).GetMethod("get_Collection_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_Collection_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.EnumList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Collection", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_Collection_Hook(thisObj);
                    else
                        value = get_Collection_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.EnumList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Collection", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_Collection_23 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_Collection_23(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.EnumList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Collection"), typeof(LocalHookProvider_set_Collection_23).GetMethod("set_Collection_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_Collection_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.EnumList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Collection", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_Collection_Hook(thisObj, arg_0);
                    else
                        set_Collection_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.EnumList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Collection", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_Value_24 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_Value_24(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSResultBytes, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Value"), typeof(LocalHookProvider_get_Value_24).GetMethod("get_Value_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_Value_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSResultBytes, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Value", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_Value_Hook(thisObj);
                    else
                        value = get_Value_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSResultBytes, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Value", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_Value_25 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_Value_25(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSResultBytes, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Value"), typeof(LocalHookProvider_set_Value_25).GetMethod("set_Value_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_Value_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSResultBytes, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Value", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_Value_Hook(thisObj, arg_0);
                    else
                        set_Value_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSResultBytes, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Value", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_Value_26 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_Value_26(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSResultString, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Value"), typeof(LocalHookProvider_get_Value_26).GetMethod("get_Value_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_Value_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSResultString, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Value", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_Value_Hook(thisObj);
                    else
                        value = get_Value_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSResultString, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Value", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_Value_27 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_Value_27(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSResultString, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Value"), typeof(LocalHookProvider_set_Value_27).GetMethod("set_Value_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_Value_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSResultString, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Value", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_Value_Hook(thisObj, arg_0);
                    else
                        set_Value_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSResultString, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Value", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_SetParentResult_28 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_SetParentResult_28(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;SetParentResult"), typeof(LocalHookProvider_SetParentResult_28).GetMethod("SetParentResult_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void SetParentResult_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;SetParentResult", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        SetParentResult_Hook(thisObj, arg_0);
                    else
                        SetParentResult_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;SetParentResult", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_ParentResult_29 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_ParentResult_29(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ParentResult"), typeof(LocalHookProvider_get_ParentResult_29).GetMethod("get_ParentResult_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_ParentResult_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ParentResult", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_ParentResult_Hook(thisObj);
                    else
                        value = get_ParentResult_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ParentResult", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_ParentResult_30 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_ParentResult_30(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_ParentResult"), typeof(LocalHookProvider_set_ParentResult_30).GetMethod("set_ParentResult_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_ParentResult_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_ParentResult", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_ParentResult_Hook(thisObj, arg_0);
                    else
                        set_ParentResult_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_ParentResult", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_ChildErrors_31 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_ChildErrors_31(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ChildErrors"), typeof(LocalHookProvider_get_ChildErrors_31).GetMethod("get_ChildErrors_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_ChildErrors_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ChildErrors", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_ChildErrors_Hook(thisObj);
                    else
                        value = get_ChildErrors_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ChildErrors", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_get_FirstChildException_32 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_FirstChildException_32(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_FirstChildException"), typeof(LocalHookProvider_get_FirstChildException_32).GetMethod("get_FirstChildException_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_FirstChildException_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_FirstChildException", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_FirstChildException_Hook(thisObj);
                    else
                        value = get_FirstChildException_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_FirstChildException", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_get_ParentErrorChain_33 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_ParentErrorChain_33(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ParentErrorChain"), typeof(LocalHookProvider_get_ParentErrorChain_33).GetMethod("get_ParentErrorChain_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_ParentErrorChain_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ParentErrorChain", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_ParentErrorChain_Hook(thisObj);
                    else
                        value = get_ParentErrorChain_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ParentErrorChain", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_get_SourceException_34 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_SourceException_34(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_SourceException"), typeof(LocalHookProvider_get_SourceException_34).GetMethod("get_SourceException_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_SourceException_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_SourceException", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_SourceException_Hook(thisObj);
                    else
                        value = get_SourceException_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_SourceException", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_get_Error_35 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_Error_35(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Error"), typeof(LocalHookProvider_get_Error_35).GetMethod("get_Error_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_Error_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Error", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_Error_Hook(thisObj);
                    else
                        value = get_Error_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Error", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_Error_36 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_Error_36(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Error"), typeof(LocalHookProvider_set_Error_36).GetMethod("set_Error_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_Error_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Error", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_Error_Hook(thisObj, arg_0);
                    else
                        set_Error_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Error", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_CombineErrors_37 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_CombineErrors_37(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;CombineErrors"), typeof(LocalHookProvider_CombineErrors_37).GetMethod("CombineErrors_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void CombineErrors_Hook(object thisObj, object arg_0, object arg_1)
            {
                object[] objectArray = new object[] { arg_0, arg_1 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;CombineErrors", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        CombineErrors_Hook(thisObj, arg_0, arg_1);
                    else
                        CombineErrors_Hook(thisObj, arg_0, arg_1);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;CombineErrors", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_AsChainResult_38 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_AsChainResult_38(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;AsChainResult"), typeof(LocalHookProvider_AsChainResult_38).GetMethod("AsChainResult_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object AsChainResult_Hook(object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                object thisObj = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;AsChainResult", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = AsChainResult_Hook(arg_0);
                    else
                        value = AsChainResult_Hook(arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;AsChainResult", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_get_Type_39 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_Type_39(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Type"), typeof(LocalHookProvider_get_Type_39).GetMethod("get_Type_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_Type_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Type", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_Type_Hook(thisObj);
                    else
                        value = get_Type_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Type", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_Type_40 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_Type_40(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Type"), typeof(LocalHookProvider_set_Type_40).GetMethod("set_Type_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_Type_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Type", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_Type_Hook(thisObj, arg_0);
                    else
                        set_Type_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Type", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_List_41 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_List_41(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_List"), typeof(LocalHookProvider_get_List_41).GetMethod("get_List_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_List_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_List", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_List_Hook(thisObj);
                    else
                        value = get_List_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_List", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_List_42 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_List_42(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_List"), typeof(LocalHookProvider_set_List_42).GetMethod("set_List_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_List_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_List", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_List_Hook(thisObj, arg_0);
                    else
                        set_List_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_List", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_Add_43 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_Add_43(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Add"), typeof(LocalHookProvider_Add_43).GetMethod("Add_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void Add_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Add", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        Add_Hook(thisObj, arg_0);
                    else
                        Add_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Add", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_ResetByAdd_44 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_ResetByAdd_44(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ResetByAdd"), typeof(LocalHookProvider_ResetByAdd_44).GetMethod("ResetByAdd_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void ResetByAdd_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ResetByAdd", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        ResetByAdd_Hook(thisObj);
                    else
                        ResetByAdd_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ResetByAdd", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_ChildErrors_45 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_ChildErrors_45(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ChildErrors"), typeof(LocalHookProvider_get_ChildErrors_45).GetMethod("get_ChildErrors_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_ChildErrors_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ChildErrors", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_ChildErrors_Hook(thisObj);
                    else
                        value = get_ChildErrors_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_ChildErrors", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_get_FirstChildException_46 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_FirstChildException_46(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_FirstChildException"), typeof(LocalHookProvider_get_FirstChildException_46).GetMethod("get_FirstChildException_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_FirstChildException_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_FirstChildException", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_FirstChildException_Hook(thisObj);
                    else
                        value = get_FirstChildException_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_FirstChildException", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_Clear_47 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_Clear_47(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Clear"), typeof(LocalHookProvider_Clear_47).GetMethod("Clear_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void Clear_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Clear", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        Clear_Hook(thisObj);
                    else
                        Clear_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSChainResultList`1, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Clear", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_SourceException_48 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_SourceException_48(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_SourceException"), typeof(LocalHookProvider_get_SourceException_48).GetMethod("get_SourceException_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_SourceException_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_SourceException", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_SourceException_Hook(thisObj);
                    else
                        value = get_SourceException_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_SourceException", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_get_CauseException_49 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_CauseException_49(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_CauseException"), typeof(LocalHookProvider_get_CauseException_49).GetMethod("get_CauseException_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_CauseException_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_CauseException", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_CauseException_Hook(thisObj);
                    else
                        value = get_CauseException_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_CauseException", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_get_DisplayModeText_50 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_DisplayModeText_50(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_DisplayModeText"), typeof(LocalHookProvider_get_DisplayModeText_50).GetMethod("get_DisplayModeText_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_DisplayModeText_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_DisplayModeText", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_DisplayModeText_Hook(thisObj);
                    else
                        value = get_DisplayModeText_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_DisplayModeText", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_DisplayModeText_51 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_DisplayModeText_51(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_DisplayModeText"), typeof(LocalHookProvider_set_DisplayModeText_51).GetMethod("set_DisplayModeText_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_DisplayModeText_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_DisplayModeText", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_DisplayModeText_Hook(thisObj, arg_0);
                    else
                        set_DisplayModeText_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_DisplayModeText", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_Message_52 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_Message_52(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Message"), typeof(LocalHookProvider_get_Message_52).GetMethod("get_Message_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_Message_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Message", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_Message_Hook(thisObj);
                    else
                        value = get_Message_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Message", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_Message_53 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_Message_53(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Message"), typeof(LocalHookProvider_set_Message_53).GetMethod("set_Message_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_Message_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Message", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_Message_Hook(thisObj, arg_0);
                    else
                        set_Message_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Message", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_StackTrace_54 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_StackTrace_54(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_StackTrace"), typeof(LocalHookProvider_get_StackTrace_54).GetMethod("get_StackTrace_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_StackTrace_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_StackTrace", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_StackTrace_Hook(thisObj);
                    else
                        value = get_StackTrace_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_StackTrace", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_StackTrace_55 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_StackTrace_55(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_StackTrace"), typeof(LocalHookProvider_set_StackTrace_55).GetMethod("set_StackTrace_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_StackTrace_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_StackTrace", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_StackTrace_Hook(thisObj, arg_0);
                    else
                        set_StackTrace_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_StackTrace", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_InnerException_56 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_InnerException_56(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_InnerException"), typeof(LocalHookProvider_get_InnerException_56).GetMethod("get_InnerException_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_InnerException_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_InnerException", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_InnerException_Hook(thisObj);
                    else
                        value = get_InnerException_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_InnerException", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_InnerException_57 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_InnerException_57(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_InnerException"), typeof(LocalHookProvider_set_InnerException_57).GetMethod("set_InnerException_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_InnerException_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_InnerException", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_InnerException_Hook(thisObj, arg_0);
                    else
                        set_InnerException_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_InnerException", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_DisplayText_58 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_DisplayText_58(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_DisplayText"), typeof(LocalHookProvider_get_DisplayText_58).GetMethod("get_DisplayText_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_DisplayText_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_DisplayText", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_DisplayText_Hook(thisObj);
                    else
                        value = get_DisplayText_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_DisplayText", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_DisplayText_59 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_DisplayText_59(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_DisplayText"), typeof(LocalHookProvider_set_DisplayText_59).GetMethod("set_DisplayText_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_DisplayText_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_DisplayText", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_DisplayText_Hook(thisObj, arg_0);
                    else
                        set_DisplayText_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_DisplayText", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_MessageStack_60 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_MessageStack_60(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_MessageStack"), typeof(LocalHookProvider_get_MessageStack_60).GetMethod("get_MessageStack_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_MessageStack_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_MessageStack", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_MessageStack_Hook(thisObj);
                    else
                        value = get_MessageStack_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_MessageStack", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_MessageStack_61 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_MessageStack_61(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_MessageStack"), typeof(LocalHookProvider_set_MessageStack_61).GetMethod("set_MessageStack_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_MessageStack_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_MessageStack", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_MessageStack_Hook(thisObj, arg_0);
                    else
                        set_MessageStack_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_MessageStack", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_CombineErrors_62 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_CombineErrors_62(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;CombineErrors"), typeof(LocalHookProvider_CombineErrors_62).GetMethod("CombineErrors_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void CombineErrors_Hook(object arg_0, object arg_1, object arg_2)
            {
                object[] objectArray = new object[] { arg_0, arg_1, arg_2 };
                object value = IntPtr.Zero;
                Exception e = null;
                object thisObj = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;CombineErrors", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        CombineErrors_Hook(arg_0, arg_1, arg_2);
                    else
                        CombineErrors_Hook(arg_0, arg_1, arg_2);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;CombineErrors", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_get_Exception_63 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_get_Exception_63(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Exception"), typeof(LocalHookProvider_get_Exception_63).GetMethod("get_Exception_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object get_Exception_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Exception", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = get_Exception_Hook(thisObj);
                    else
                        value = get_Exception_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;get_Exception", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_set_Exception_64 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_set_Exception_64(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Exception"), typeof(LocalHookProvider_set_Exception_64).GetMethod("set_Exception_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void set_Exception_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Exception", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        set_Exception_Hook(thisObj, arg_0);
                    else
                        set_Exception_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;set_Exception", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_SetUserException_65 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_SetUserException_65(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;SetUserException"), typeof(LocalHookProvider_SetUserException_65).GetMethod("SetUserException_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void SetUserException_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;SetUserException", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        SetUserException_Hook(thisObj, arg_0);
                    else
                        SetUserException_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;SetUserException", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_SetException_66 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_SetException_66(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;SetException"), typeof(LocalHookProvider_SetException_66).GetMethod("SetException_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void SetException_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;SetException", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        SetException_Hook(thisObj, arg_0);
                    else
                        SetException_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;SetException", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_Serialize_67 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_Serialize_67(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Serialize"), typeof(LocalHookProvider_Serialize_67).GetMethod("Serialize_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object Serialize_Hook(object thisObj)
            {
                object[] objectArray = null;
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Serialize", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = Serialize_Hook(thisObj);
                    else
                        value = Serialize_Hook(thisObj);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Serialize", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_ProcessRequest_68 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_ProcessRequest_68(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ProcessRequest"), typeof(LocalHookProvider_ProcessRequest_68).GetMethod("ProcessRequest_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void ProcessRequest_Hook(object arg_0, object arg_1)
            {
                object[] objectArray = new object[] { arg_0, arg_1 };
                object value = IntPtr.Zero;
                Exception e = null;
                object thisObj = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ProcessRequest", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        ProcessRequest_Hook(arg_0, arg_1);
                    else
                        ProcessRequest_Hook(arg_0, arg_1);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ProcessRequest", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_ExecuteUserOperation_69 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_ExecuteUserOperation_69(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ExecuteUserOperation"), typeof(LocalHookProvider_ExecuteUserOperation_69).GetMethod("ExecuteUserOperation_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static void ExecuteUserOperation_Hook(object thisObj, object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ExecuteUserOperation", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        ExecuteUserOperation_Hook(thisObj, arg_0);
                    else
                        ExecuteUserOperation_Hook(thisObj, arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSResult, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ExecuteUserOperation", thisObj, value, e);
                }
            }
        }

        public sealed class LocalHookProvider_Serialize_70 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_Serialize_70(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSSerializer, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Serialize"), typeof(LocalHookProvider_Serialize_70).GetMethod("Serialize_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object Serialize_Hook(object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                object thisObj = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSSerializer, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Serialize", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = Serialize_Hook(arg_0);
                    else
                        value = Serialize_Hook(arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSSerializer, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Serialize", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_GetInstance_71 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_GetInstance_71(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSSerializer, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;GetInstance"), typeof(LocalHookProvider_GetInstance_71).GetMethod("GetInstance_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object GetInstance_Hook(object arg_0)
            {
                object[] objectArray = new object[] { arg_0 };
                object value = IntPtr.Zero;
                Exception e = null;
                object thisObj = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSSerializer, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;GetInstance", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = GetInstance_Hook(arg_0);
                    else
                        value = GetInstance_Hook(arg_0);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSSerializer, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;GetInstance", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_GetInstance_72 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_GetInstance_72(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSSerializer, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;GetInstance"), typeof(LocalHookProvider_GetInstance_72).GetMethod("GetInstance_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object GetInstance_Hook(object arg_0, object arg_1)
            {
                object[] objectArray = new object[] { arg_0, arg_1 };
                object value = IntPtr.Zero;
                Exception e = null;
                object thisObj = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSSerializer, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;GetInstance", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = GetInstance_Hook(arg_0, arg_1);
                    else
                        value = GetInstance_Hook(arg_0, arg_1);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSSerializer, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;GetInstance", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_SetKeyValue_73 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_SetKeyValue_73(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.StringExtensions, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;SetKeyValue"), typeof(LocalHookProvider_SetKeyValue_73).GetMethod("SetKeyValue_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object SetKeyValue_Hook(object arg_0, object arg_1, object arg_2)
            {
                object[] objectArray = new object[] { arg_0, arg_1, arg_2 };
                object value = IntPtr.Zero;
                Exception e = null;
                object thisObj = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.StringExtensions, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;SetKeyValue", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = SetKeyValue_Hook(arg_0, arg_1, arg_2);
                    else
                        value = SetKeyValue_Hook(arg_0, arg_1, arg_2);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.StringExtensions, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;SetKeyValue", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_ProcessException_74 : NetHook.Core.LocalHookRuntimeInstance
        {

            public LocalHookProvider_ProcessException_74(NetHook.Core.LocalHookAdapter adapter) :
                    base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.UserException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ProcessException"), typeof(LocalHookProvider_ProcessException_74).GetMethod("ProcessException_Hook", BindingFlags.Static | BindingFlags.NonPublic))
            {
            }

            [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
            private static object ProcessException_Hook(object arg_0, object arg_1)
            {
                object[] objectArray = new object[] { arg_0, arg_1 };
                object value = IntPtr.Zero;
                Exception e = null;
                object thisObj = null;
                LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.UserException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ProcessException", thisObj, objectArray);
                try
                {
                    if (objectArray.Length > 0)
                        value = ProcessException_Hook(arg_0, arg_1);
                    else
                        value = ProcessException_Hook(arg_0, arg_1);
                }
                catch (System.Exception ex)
                {
                    e = ex;
                    throw;
                }
                finally
                {
                    LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.UserException, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ProcessException", thisObj, value, e);
                }
                return value;
            }
        }

        public sealed class LocalHookProvider_System.Configuration.IConfigurationSectionHandler.Create_75 : NetHook.Core.LocalHookRuntimeInstance
    {
        
        public LocalHookProvider_System.Configuration.IConfigurationSectionHandler.Create_75(NetHook.Core.LocalHookAdapter adapter) : 
                base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.XmlConfigSection, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;System.Configuration.IConfigurationSectionHandler.Create"),  typeof(LocalHookProvider_System.Configuration.IConfigurationSectionHandler.Create_75).GetMethod("System.Configuration.IConfigurationSectionHandler.Create_Hook", BindingFlags.Static | BindingFlags.NonPublic))
        {
        }

    [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
    private static object System.Configuration.IConfigurationSectionHandler.Create_Hook(object thisObj, object arg_0, object arg_1, object arg_2)
    {
        object[] objectArray = new object[] { arg_0, arg_1, arg_2 };
        object value = IntPtr.Zero;
        Exception e = null;
        LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.XmlConfigSection, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;System.Configuration.IConfigurationSectionHandler.Create", thisObj, objectArray);
        try
        {
            if (objectArray.Length > 0)
                value = System.Configuration.IConfigurationSectionHandler.Create_Hook(thisObj, arg_0, arg_1, arg_2);
            else
                value = System.Configuration.IConfigurationSectionHandler.Create_Hook(thisObj, arg_0, arg_1, arg_2);
        }
        catch (System.Exception ex)
        {
            e = ex;
            throw;
        }
        finally
        {
            LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.XmlConfigSection, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;System.Configuration.IConfigurationSectionHandler.Create", thisObj, value, e);
        }
        return value;
    }
}

public sealed class LocalHookProvider_Invoke_76 : NetHook.Core.LocalHookRuntimeInstance
{

    public LocalHookProvider_Invoke_76(NetHook.Core.LocalHookAdapter adapter) :
            base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSResult+ProcessRequestCode, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Invoke"), typeof(LocalHookProvider_Invoke_76).GetMethod("Invoke_Hook", BindingFlags.Static | BindingFlags.NonPublic))
    {
    }

    [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
    private static object Invoke_Hook(object thisObj)
    {
        object[] objectArray = null;
        object value = IntPtr.Zero;
        Exception e = null;
        LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSResult+ProcessRequestCode, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Invoke", thisObj, objectArray);
        try
        {
            if (objectArray.Length > 0)
                value = Invoke_Hook(thisObj);
            else
                value = Invoke_Hook(thisObj);
        }
        catch (System.Exception ex)
        {
            e = ex;
            throw;
        }
        finally
        {
            LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSResult+ProcessRequestCode, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Invoke", thisObj, value, e);
        }
        return value;
    }
}

public sealed class LocalHookProvider_Invoke_77 : NetHook.Core.LocalHookRuntimeInstance
{

    public LocalHookProvider_Invoke_77(NetHook.Core.LocalHookAdapter adapter) :
            base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.JSResult+UserOperation, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Invoke"), typeof(LocalHookProvider_Invoke_77).GetMethod("Invoke_Hook", BindingFlags.Static | BindingFlags.NonPublic))
    {
    }

    [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
    private static void Invoke_Hook(object thisObj)
    {
        object[] objectArray = null;
        object value = IntPtr.Zero;
        Exception e = null;
        LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.JSResult+UserOperation, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Invoke", thisObj, objectArray);
        try
        {
            if (objectArray.Length > 0)
                Invoke_Hook(thisObj);
            else
                Invoke_Hook(thisObj);
        }
        catch (System.Exception ex)
        {
            e = ex;
            throw;
        }
        finally
        {
            LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.JSResult+UserOperation, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;Invoke", thisObj, value, e);
        }
    }
}

public sealed class LocalHookProvider_ToXmlDocument_78 : NetHook.Core.LocalHookRuntimeInstance
{

    public LocalHookProvider_ToXmlDocument_78(NetHook.Core.LocalHookAdapter adapter) :
            base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.Extensions.XmlExtensions, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ToXmlDocument"), typeof(LocalHookProvider_ToXmlDocument_78).GetMethod("ToXmlDocument_Hook", BindingFlags.Static | BindingFlags.NonPublic))
    {
    }

    [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
    private static object ToXmlDocument_Hook(object arg_0)
    {
        object[] objectArray = new object[] { arg_0 };
        object value = IntPtr.Zero;
        Exception e = null;
        object thisObj = null;
        LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.Extensions.XmlExtensions, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ToXmlDocument", thisObj, objectArray);
        try
        {
            if (objectArray.Length > 0)
                value = ToXmlDocument_Hook(arg_0);
            else
                value = ToXmlDocument_Hook(arg_0);
        }
        catch (System.Exception ex)
        {
            e = ex;
            throw;
        }
        finally
        {
            LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.Extensions.XmlExtensions, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ToXmlDocument", thisObj, value, e);
        }
        return value;
    }
}

public sealed class LocalHookProvider_ToXDocument_79 : NetHook.Core.LocalHookRuntimeInstance
{

    public LocalHookProvider_ToXDocument_79(NetHook.Core.LocalHookAdapter adapter) :
            base(LocalHookAdapter.Current.Get("WSSC.V4.SYS.Lib.Extensions.XmlExtensions, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ToXDocument"), typeof(LocalHookProvider_ToXDocument_79).GetMethod("ToXDocument_Hook", BindingFlags.Static | BindingFlags.NonPublic))
    {
    }

    [System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute()]
    private static object ToXDocument_Hook(object arg_0)
    {
        object[] objectArray = new object[] { arg_0 };
        object value = IntPtr.Zero;
        Exception e = null;
        object thisObj = null;
        LocalHookAdapter.Current.BeginInvoke("WSSC.V4.SYS.Lib.Extensions.XmlExtensions, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ToXDocument", thisObj, objectArray);
        try
        {
            if (objectArray.Length > 0)
                value = ToXDocument_Hook(arg_0);
            else
                value = ToXDocument_Hook(arg_0);
        }
        catch (System.Exception ex)
        {
            e = ex;
            throw;
        }
        finally
        {
            LocalHookAdapter.Current.AfterInvoke("WSSC.V4.SYS.Lib.Extensions.XmlExtensions, WSSC.V4.SYS.Lib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=9f4da00116c38ec5;ToXDocument", thisObj, value, e);
        }
        return value;
    }
}
}
}
